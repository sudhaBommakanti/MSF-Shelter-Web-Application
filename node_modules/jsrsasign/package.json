{
  "_args": [
    [
      {
        "raw": "jsrsasign@^5.0.7",
        "scope": null,
        "escapedName": "jsrsasign",
        "name": "jsrsasign",
        "rawSpec": "^5.0.7",
        "spec": ">=5.0.7 <6.0.0",
        "type": "range"
      },
      "C:\\dev\\msf-catalogue-app\\node_modules\\oidc-client"
    ]
  ],
  "_from": "jsrsasign@>=5.0.7 <6.0.0",
  "_id": "jsrsasign@5.1.0",
  "_inCache": true,
  "_location": "/jsrsasign",
  "_nodeVersion": "4.4.7",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/jsrsasign-5.1.0.tgz_1473270540198_0.6754874405451119"
  },
  "_npmUser": {
    "name": "kjur",
    "email": "kenji.urushima@gmail.com"
  },
  "_npmVersion": "2.15.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jsrsasign@^5.0.7",
    "scope": null,
    "escapedName": "jsrsasign",
    "name": "jsrsasign",
    "rawSpec": "^5.0.7",
    "spec": ">=5.0.7 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/oidc-client"
  ],
  "_resolved": "https://registry.npmjs.org/jsrsasign/-/jsrsasign-5.1.0.tgz",
  "_shasum": "2549d559674f6f8956b12bd7f3b5c066b4e0c6ba",
  "_shrinkwrap": null,
  "_spec": "jsrsasign@^5.0.7",
  "_where": "C:\\dev\\msf-catalogue-app\\node_modules\\oidc-client",
  "author": {
    "name": "Kenji Urushima"
  },
  "bugs": {
    "url": "https://github.com/kjur/jsrsasign/issues"
  },
  "dependencies": {},
  "description": "opensource free pure JavaScript cryptographic library supports RSA/RSAPSS/ECDSA/DSA signing/validation, ASN.1, PKCS#1/5/8 private/public key, X.509 certificate, CRL, CMS SignedData, TimeStamp and CAdES and JSON Web Signature(JWS)/Token(JWT)/Key(JWK).",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "2549d559674f6f8956b12bd7f3b5c066b4e0c6ba",
    "tarball": "https://registry.npmjs.org/jsrsasign/-/jsrsasign-5.1.0.tgz"
  },
  "homepage": "https://github.com/kjur/jsrsasign#readme",
  "keywords": [
    "RSA",
    "ECDSA",
    "DSA",
    "RSAPSS",
    "PKCS#1",
    "PKCS#5",
    "PKCS#8",
    "private key",
    "public key",
    "CSR",
    "PKCS#10",
    "hash function",
    "HMac",
    "ASN.1",
    "certificate",
    "X.509",
    "RFC 3161",
    "Digital Timestamp",
    "Timestamp",
    "Time Stamp Token",
    "CMS",
    "Cryptgraphic Message Syntax",
    "PKCS#7",
    "Signature",
    "Digital Signature",
    "signing",
    "Message Digest",
    "JSON Web Token",
    "JWT",
    "JSON Web Signature",
    "JWS",
    "JSON Web Key",
    "JWK",
    "JOSE",
    "JWA"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/kjur/jsrsasign/master/LICENSE.txt"
    }
  ],
  "main": "lib/jsrsasign.js",
  "maintainers": [
    {
      "name": "kjur",
      "email": "kenji.urushima@gmail.com"
    }
  ],
  "name": "jsrsasign",
  "optionalDependencies": {},
  "readme": "jsrsasign\r\n=========\r\n\r\nThe 'jsrsasign' (RSA-Sign JavaScript Library) is an opensource free pure JavaScript cryptographic library supports RSA/RSAPSS/ECDSA/DSA signing/validation, ASN.1, PKCS#1/5/8 private/public key, X.509 certificate, CRL, CMS SignedData, TimeStamp and CAdES and JSON Web Signature(JWS)/Token(JWT)/Key(JWK).\r\n\r\nPublic page is http://kjur.github.com/jsrsasign .\r\n\r\n[github TOP](http://kjur.github.io/jsrsasign/)|[API doc](http://kjur.github.io/jsrsasign/api/)|[Wiki](https://github.com/kjur/jsrsasign/wiki)|[Node sample](https://github.com/kjur/jsrsasign/tree/master/sample_node)\r\n\r\nDIFFERENCE WITH CRYPTO MODULE\r\n-----------------------------\r\n\r\nHere is the difference between bundled ['Crypto' module](http://nodejs.org/api/crypto.html) \r\nand this 'jsrsasign' module.\r\n\r\n- Crypto module\r\n    - fast\r\n    - works only on Node.js\r\n    - OpenSSL based\r\n    - lacking ASN.1 functionality\r\n    - provides symmetric ciphers\r\n    - lacking RSAPSS signing\r\n- jsrsasign module\r\n    - slow\r\n    - implemented in pure JavaScript\r\n    - works on both Node.js(server) and browsers(client)\r\n    - provides ASN.1 parsing/generation functionality\r\n    - lacking symmetric ciphers\r\n    - provides RSAPSS signing\r\n    - also provides support for JSON Web Signatures (JWS) and JSON Web Token (JWT)\r\n\r\nAVAILABLE CLASSES AND METHODS\r\n-----------------------------\r\n\r\nMost of the classes and methods defined in jsrsasign and jsjws are\r\navailable in this jsrsasign npm module.\r\n\r\nAfter loading the module,\r\n\r\n    > var r = require('jsrsasign');\r\n\r\nYou can refer name spaces, classes, methods and functions \r\nby following variables:\r\n\r\n- r.BigInteger - BigInteger class\r\n- r.RSAKey - [RSAKey class](http://kjur.github.io/jsrsasign/api/symbols/RSAKey.html)\r\n- r.ECDSA - [KJUR.crypto.ECDSA class](http://kjur.github.io/jsrsasign/api/symbols/KJUR.crypto.ECDSA.html)\r\n- r.DSA - [KJUR.crypto.DSA class](http://kjur.github.io/jsrsasign/api/symbols/KJUR.crypto.DSA.html)\r\n- r.Signature - [KJUR.crypto.Signature class](http://kjur.github.io/jsrsasign/api/symbols/KJUR.crypto.Signature.html)\r\n- r.MessageDigest - [KJUR.crypto.MessageDigest class](http://kjur.github.io/jsrsasign/api/symbols/KJUR.crypto.MessageDigest.html)\r\n- r.Mac - [KJUR.crypto.Mac class](http://kjur.github.io/jsrsasign/api/symbols/KJUR.crypto.Mac.html)\r\n- r.KEYUTIL - [KEYUTIL class](http://kjur.github.io/jsrsasign/api/symbols/KEYUTIL.html)\r\n- r.ASN1HEX - [ASN1HEX class](http://kjur.github.io/jsrsasign/api/symbols/ASN1HEX.html)\r\n- r.crypto - [KJUR.crypto name space](http://kjur.github.io/jsrsasign/api/symbols/KJUR.crypto.html)\r\n- r.asn1 - [KJUR.asn1 name space](http://kjur.github.io/jsrsasign/api/symbols/KJUR.asn1.html)\r\n- r.jws - [KJUR.jws name space](http://kjur.github.io/jsjws/api/)\r\n\r\nPlease see API reference in the above links.\r\n\r\nEXAMPLE(1) SIGNATURE\r\n--------------------\r\n\r\nLoading encrypted PKCS#5 private key:\r\n\r\n    > var fs = require('fs');\r\n    > var pem = fs.readFileSync('z1.prv.p5e.pem', 'binary');\r\n    > var prvKey = a.KEYUTIL.getKey(pem, 'passwd');\r\n\r\nSign string 'aaa' with the loaded private key:\r\n\r\n    > var sig = new a.Signature({alg: 'SHA1withRSA'});\r\n    > sig.init(prvKey);\r\n    > sig.updateString('aaa');\r\n    > var sigVal = sig.sign();\r\n    > sigVal\r\n    'd764dcacb...'\r\n\r\nMORE TUTORIALS AND SAMPLES\r\n--------------------\r\n- [Tutorials in GitHub Wiki](https://github.com/kjur/jsrsasign/wiki)\r\n- [Sample Node Scripts](https://github.com/kjur/jsrsasign/tree/master/sample_node)\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kjur/jsrsasign.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "5.1.0"
}
